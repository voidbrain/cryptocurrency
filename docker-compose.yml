services:
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - '8080:80'
  #   volumes:
  #     - ./frontend/src:/app/src
  #     - ./frontend/public:/app/public
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=80
  #     - DOMAIN=frontend
    
  #   networks:
  #     - p2p-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
      - '6001:6001'
    volumes:
      - ./backend/src:/app/src
    environment:
      - NODE_ENV=development
      - PORT=3001
      - P2PPORT=6001
      - DOMAIN=backend
    networks:
      p2p-network:
        ipv4_address: 172.20.0.2

  backend2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '3002:3002'
      - '6002:6002'
    volumes:
      - ./backend2/src:/app/src
    environment:
      - NODE_ENV=development
      - PORT=3002
      - P2PPORT=6002
      - DOMAIN=backend2
    networks:
      p2p-network:
        ipv4_address: 172.20.0.3

  miner:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
      - "6005:6005"
    
    environment:
      - NODE_ENV=development
      - PORT=3005
      - P2PPORT=6005
      - DOMAIN=miner
    networks:
      p2p-network:
        ipv4_address: 172.20.0.5

  # dashboard:
  #   build:
  #     context: ./dashboard
  #     dockerfile: Dockerfile
  #   ports:
  #     - '8081:80'
  #   volumes:
  #     - ./dashboard/src:/app/src
  #     - ./dashboard/public:/app/public
  #   environment:
  #     - NODE_ENV=development
  #     - DOMAIN=dashboard
  #     - PORT=80
    
  #   networks:
  #     - p2p-network
    

networks:
  p2p-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
