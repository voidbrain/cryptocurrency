services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '8080:80'
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    environment:
      - NODE_ENV=development
      - PORT=80
      - DOMAIN=frontend
    
    networks:
      - cryptonetwork

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./backend/src:/app/src
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DOMAIN=backend
    
    networks:
      - cryptonetwork

  # blockchain-server-1:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3001
  #     - DOMAIN=blockchain-server-1
  #   networks:
  #     - cryptonetwork

  # blockchain-server-2:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3002:3000"
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3002
  #     - DOMAIN=blockchain-server-2
  #   networks:
  #     - cryptonetwork

  miner:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DOMAIN=localhost
    networks:
      - cryptonetwork

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - '8081:80'
    volumes:
      - ./dashboard/src:/app/src
      - ./dashboard/public:/app/public
    environment:
      - NODE_ENV=development
      - DOMAIN=dashboard
      - PORT=80
    
    networks:
      - cryptonetwork
    

networks:
  cryptonetwork:
    driver: bridge
